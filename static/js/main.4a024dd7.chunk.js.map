{"version":3,"sources":["store.js","api.js","App.js","index.js"],"names":["initialState","isButtonOn","isLoading","store","createStore","state","action","type","BASE_ENDPOINT","ServerAPI","getData","a","fetch","data","json","putState","body","method","JSON","stringify","headers","credentials","response","Loader","className","App","dispatch","useDispatch","useSelector","onButtonClick","isOn","ok","useEffect","initialization","onClick","ReactDOM","render","document","getElementById"],"mappings":"iMAEMA,EAAe,CACjBC,WAAY,KACZC,WAAW,GA+BFC,EAAQC,aA5BL,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCAC9C,OAAQA,EAAOC,MACX,IAAK,mBACD,OAAO,2BACAF,GADP,IAEIJ,WAAYK,EAAOL,aAG3B,IAAK,sBACD,OAAO,2BACAI,GADP,IAEIJ,YAAaI,EAAMJ,aAG3B,IAAK,uBACD,OAAO,2BACAI,GADP,IAEIH,WAAYG,EAAMH,YAG1B,QACI,OAAOG,M,uCC5BbG,EAAgB,oEAGTC,EAAY,CAErBC,QAAQ,WAAD,4BAAE,4BAAAC,EAAA,sEACcC,MAAMJ,GADpB,cACCK,EADD,yBAEEA,EAAKC,QAFP,2CAAF,kDAAC,GAMRC,SAAS,WAAD,4BAAE,WAAOC,GAAP,eAAAL,EAAA,sEACiBC,MAAMJ,EAAe,CACxCS,OAAQ,MACRD,KAAME,KAAKC,UAAUH,GACrBI,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAPX,cACAC,EADA,yBASCA,GATD,2CAAF,mDAAC,I,OCiCPC,EAAS,kBAAM,sBAAKC,UAAU,eAAf,UAA8B,wBAAW,wBAAW,wBAAW,4BAKrEC,EA3CH,WACV,IAAMC,EAAWC,cADD,EAEgBC,aAAY,SAAAvB,GAAK,MAAI,CAACA,EAAMJ,WAAYI,EAAMH,cAF9D,mBAETD,EAFS,KAEGC,EAFH,KAIV2B,EAAa,uCAAG,sBAAAlB,EAAA,6DACpBe,EAAS,CAAEnB,KAAM,yBADG,SAEJE,EAAUM,SAAS,CAAEe,MAAO7B,IAFxB,cAGZ8B,KACNL,EAAS,CAAEnB,KAAM,wBACjBmB,EAAS,CAAEnB,KAAM,0BALC,2CAAH,qDAmBnB,OATAyB,qBAAU,YACY,uCAAG,4BAAArB,EAAA,sEACJF,EAAUC,UADN,OACjBG,EADiB,OAErBa,EAAS,CAAEnB,KAAM,mBAAoBN,WAAYY,EAAKiB,OACtDJ,EAAS,CAAEnB,KAAM,yBAHI,2CAAH,qDAKpB0B,KACC,IAGD,qBAAKT,UAAU,UAAf,SACE,wBAAQA,UAAU,iBAAiBU,QAASL,EAA5C,SAEI3B,EACI,cAAC,EAAD,IACAD,EACE,KACA,WC9BhBkC,IAASC,OACP,cAAC,IAAD,CAAUjC,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFkC,SAASC,eAAe,W","file":"static/js/main.4a024dd7.chunk.js","sourcesContent":["import { createStore } from 'redux'\r\n\r\nconst initialState = {\r\n    isButtonOn: null,\r\n    isLoading: true\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_BUTTON_STATE': {\r\n            return {\r\n                ...state,\r\n                isButtonOn: action.isButtonOn\r\n            }\r\n        }\r\n        case 'CHANGE_BUTTON_STATE': {\r\n            return {\r\n                ...state,\r\n                isButtonOn: !state.isButtonOn\r\n            }\r\n        }\r\n        case 'CHANGE_LOADING_STATE': {\r\n            return {\r\n                ...state,\r\n                isLoading: !state.isLoading\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const store = createStore(reducer)","const BASE_ENDPOINT = 'https://5fd7e59c9dd0db0017ee9d3c.mockapi.io/api/v1/button-state/1'\r\n\r\n\r\nexport const ServerAPI = {\r\n\r\n    getData: async () => {\r\n        const data = await fetch(BASE_ENDPOINT)\r\n        return data.json()\r\n    },\r\n\r\n\r\n    putState: async (body) => {\r\n        const response = await fetch(BASE_ENDPOINT, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials: \"same-origin\"\r\n        })\r\n        return response\r\n    }\r\n\r\n\r\n}","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { ServerAPI } from './api'\r\n\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const [isButtonOn, isLoading] = useSelector(state => [state.isButtonOn, state.isLoading])\r\n\r\n  const onButtonClick = async () => {\r\n    dispatch({ type: 'CHANGE_LOADING_STATE' })\r\n    let res = await ServerAPI.putState({ isOn: !isButtonOn })\r\n    if (res.ok) {\r\n      dispatch({ type: 'CHANGE_BUTTON_STATE' })\r\n      dispatch({ type: 'CHANGE_LOADING_STATE' })\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const initialization = async () => {\r\n      let data = await ServerAPI.getData()\r\n      dispatch({ type: 'SET_BUTTON_STATE', isButtonOn: data.isOn })\r\n      dispatch({ type: 'CHANGE_LOADING_STATE' })\r\n    }\r\n    initialization()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <button className=\"circularButton\" onClick={onButtonClick}>\r\n        {\r\n          isLoading\r\n            ? <Loader />\r\n            : isButtonOn\r\n              ? \"ON\"\r\n              : \"OFF\"\r\n        }\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Loader = () => <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}